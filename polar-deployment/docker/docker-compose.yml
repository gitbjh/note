services:
  edge-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\edge-service
      dockerfile: Dockerfile
    image: "edge-service"
    container_name: "edge-service"
    ports:
      - 9000:9000
    environment:
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - AUTH_SERVICE_URL=http://auth-service:9004

  catalog-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\catalog-service
      dockerfile: Dockerfile
    depends_on:
      - polar-mysql
    image: "catalog-service"
    container_name: "catalog-service"
    ports:
      - 9001:9001
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://polar-mysql:3306/catalog?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8

  order-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\order-service
      dockerfile: Dockerfile
    depends_on:
      - polar-mysql
    image: "order-service"
    container_name: "order-service"
    ports:
      - 9002:9002
    environment:
      - SPRING_R2DBC_URL=r2dbc:mysql://polar-mysql:3306/order
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234

  dispatcher-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\dispatcher-service
      dockerfile: Dockerfile
    image: "dispatcher-service"
    container_name: "dispatcher-service"
    ports:
      - 9003:9003
    environment:
      - SPRING_RABBITMQ_HOST=polar-rabbitmq
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234

  auth-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\auth-service
      dockerfile: Dockerfile
    depends_on:
      - polar-mysql
    image: "auth-service"
    container_name: "auth-service"
    ports:
      - 9004:9004
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://polar-mysql:3306/auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
  
  web-front-service:
    build:
      context: c:\Users\hi-pc-999\Desktop\java\polar-service\web-front-service
      dockerfile: Dockerfile
    image: "web-front-service"
    container_name: "web-front-service"
    ports:
      - 9005:9005
    environment:
      - EDGE_SERVICE_URL=http://edge-service:9000
    
  polar-mysql:
    image: "mysql:latest"
    container_name: "polar-mysql"
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  polar-rabbitmq:
    image: "rabbitmq:management"
    container_name: "polar-rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=1234
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

# docker-compose는 같은 네트워크로 묶어 줌
# dockerfile에 어떤 개발 환경(build.gradle)인지 적었기 때문에 maven-repository에서 알아서 가져온다.