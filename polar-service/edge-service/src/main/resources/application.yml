server:
  port: 9000
spring:
  application:
    name: edge-service
  cloud:
    gateway:
      routes:
        - id: catalog-service
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
          predicates:
            - Path=/books/**
          filters:
            - name: PreGatewayFilter
            - name: CircuitBreaker # 서비스에 장애가 생겼을 때 격리시키고 그에 맞는 응답을 주게 함
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/service-fallback # CircuitBreaker가 동작했을 때 이행할 정책
        - id: order-service
          uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: PreGatewayFilter
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/service-fallback
        - id: auth-service
          uri: ${AUTH_SERVICE_URL:http://localhost:9004}/auths
          predicates:
            - Path=/auths/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/service-fallback
resilience4j:
  circuitbreaker:
    configs:
      default:
        permitted-number-of-calls-in-half-open-state: 5 # 회로가 반개방 상태일 때 허용되는 호출의 수
        failure-rate-threshold: 50 # 실패율이 임계값 이상이면 회로는 개방 상태로 바뀐다. (개방 상태 = 장애가 난 상태)
        wait-duration-in-open-state: 15000 # 개방 상태에서 반개방 상태로 가기까지 기다릴 시간(밀리초)
  timelimiter:
    configs:
      default: # 모든 시간 제한에 대한 기본 설정
        timeout-duration:
          seconds: 5
polar:
  auth-service-url: ${AUTH_SERVICE_URL:http://localhost:9004}